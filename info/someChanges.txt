D:\Users\fetia\ToYang
Fei Tian 20:46:
137

===========================

Fei Tian 20:51:
#emb:
temp_Wemb = original_model['Wemb']
orig_emb_mean = np.mean(temp_Wemb,  axis=0)
self.large_params_dict[_p('large', 'Wemb')]= np.tile(orig_emb_mean, [self.large_params_dict[_p('large', 'Wemb')].shape[0],1])

# Map old into new, o is old, g is new
for (o, g) in o2g_src_map.iteritems():
    if o < temp_Wemb.shape[0]:
        self.large_params_dict[_p('large', 'Wemb')][g] = temp_Wemb[o]

print 'Convert input embedding done'

temp_ff_logit_W = original_model['ff_logit_W'].T
temp_Wemb_dec = original_model['Wemb_dec']
temp_b = original_model['ff_logit_b']

orig_ff_logit_W_mean = np.mean(temp_ff_logit_W, axis= 0)
orig_Wemb_dec_mean = np.mean(temp_Wemb_dec,  axis = 0)
orig_b_mean = np.mean(temp_b)

self.large_params_dict[_p('large', 'Wemb_dec')] = np.tile(orig_Wemb_dec_mean, [self.large_params_dict[_p('large',  'Wemb_dec')].shape[0],  1])
self.large_params_dict[_p('large', 'ff_logit_W')] = np.tile(orig_ff_logit_W_mean, [self.large_params_dict[_p('large', 'ff_logit_W')].shape[0],  1])
self.large_params_dict[_p('large', 'ff_logit_b')].fill(orig_b_mean)

for (o,g) in o2g_tgt_map.iteritems():
    if o < temp_Wemb_dec.shape[0]:
        self.large_params_dict[_p('large', 'Wemb_dec')][g] = temp_Wemb_dec[o]
        self.large_params_dict[_p('large', 'ff_logit_b')][g] = temp_b[o]
        self.large_params_dict[_p('large', 'ff_logit_W')][g] = temp_ff_logit_W[o]

print 'Convert output embedding done'

===========================

init_lr =  0.4
sgd
1w iteration ->  dump model
save_freq
8w  iteation ->  lr  /=2
